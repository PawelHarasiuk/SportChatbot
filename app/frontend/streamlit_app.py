import streamlit as st
import requests
import json
import os


FLASK_BACKEND_URL = os.getenv("FLASK_BACKEND_URL", "http://0.0.0.0:5000") 


st.set_page_config(page_title="SportChatBot", layout="centered")

st.title("ğŸ¤– SportChatBot")
st.write("Hej! Jestem tu Å¼eby uÅ‚atwiÄ‡ ci dostÄ™p do nowinek z Å›wiata sportu. Specjalizuje siÄ™ w piÅ‚ce noÅ¼nej, koszykÃ³wce, piÅ‚ce rÄ™cznej, siatkÃ³wce, tenisie oraz lekkoatletyce.")


if "messages" not in st.session_state:
    st.session_state.messages = []
    
if "chat_placeholders" not in st.session_state:
    st.session_state.chat_placeholders = []

for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

chat_container = st.container()

query = st.chat_input("Zadaj mi pytanie...")


if query:
    st.session_state.messages.append({"role": "user", "content": query})
    with st.chat_message("user"):
        st.markdown(query)

    with st.chat_message("assistant"):
        with st.spinner("MyÅ›lÄ™... ProszÄ™ czekaÄ‡..."):
            try:
                response = requests.post(f"{FLASK_BACKEND_URL}/query", json={"query": query})
                response.raise_for_status() 

                result = response.json()
                answer = result.get("answer", "Nie udaÅ‚o mi siÄ™ znaleÅºÄ‡ odpowiedzi.")
                st.markdown(answer)
                st.session_state.messages.append({"role": "assistant", "content": answer})

            except requests.exceptions.ConnectionError:
                st.error("BÅ‚Ä…d poÅ‚Ä…czenia z backendem. Upewnij siÄ™, Å¼e serwer Flask dziaÅ‚a.")
                st.session_state.messages.append({"role": "assistant", "content": "BÅ‚Ä…d poÅ‚Ä…czenia z backendem."})
            except requests.exceptions.RequestException as e:
                st.error(f"WystÄ…piÅ‚ bÅ‚Ä…d podczas komunikacji z backendem: {e}")
                st.session_state.messages.append({"role": "assistant", "content": f"BÅ‚Ä…d komunikacji: {e}"})
            except json.JSONDecodeError:
                st.error("Backend zwrÃ³ciÅ‚ nieprawidÅ‚owÄ… odpowiedÅº JSON.")
                st.session_state.messages.append({"role": "assistant", "content": "BÅ‚Ä…d: nieprawidÅ‚owa odpowiedÅº JSON."})
            except Exception as e:
                st.error(f"WystÄ…piÅ‚ nieoczekiwany bÅ‚Ä…d: {e}")
                st.session_state.messages.append({"role": "assistant", "content": f"Nieoczekiwany bÅ‚Ä…d: {e}"})

